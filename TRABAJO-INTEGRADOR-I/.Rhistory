library(tidyverse)
library(ggplot2)
library(gganimate)
library(gifski)
mean_sect_ano <- read.csv("BASES-Y-VIZ/PRESENTACION_FINAL/mean_sect_ano.csv", header = TRUE)
mean_sect_ej3<- mean_sect_ano %>%
rename(promediosector= mean_sector) %>%
glimpse()
cuartiles_max_2023<- mean_sect_ej3 %>%
filter(year==2023) %>%
summary(promediosector)
print(cuartiles_max_2023)
cuartil1<- mean_sect_ej3%>%
filter(year==2023,
promediosector<=240566) %>%
arrange(promediosector)
cuartil2<- mean_sect_ej3 %>%
filter(year==2023,
promediosector>240566 & promediosector<=312783) %>%
arrange(promediosector)
cuartil3<-mean_sect_ej3 %>%
filter(year==2023,
promediosector> 312783 & promediosector<=430231) %>%
arrange(promediosector)
cuartil4<-mean_sect_ej3 %>%
filter(year==2023,
promediosector> 430231) %>%
arrange(promediosector)
salario_x_year <- mean_sect_ej3 %>%
select(letra_desc, year, promediosector) %>%
group_by(year) %>%
summarize(promediosector = mean(promediosector, na.rm = TRUE)) %>%
mutate(letra_desc = "nacional") %>%
glimpse()
salario_x_year <- mean_sect_ej3 %>%
select(letra_desc, year, promediosector) %>%
group_by(year) %>%
summarize(promedio_nacional = mean(promediosector, na.rm = TRUE)) %>%
glimpse()
salario_compa <- mean_sect_ej3 %>%
select(letra_desc, year, promediosector) %>%
group_by(year) %>%
left_join(salario_x_year, by = "year") %>%
mutate(proporcion = promediosector / promedio_nacional)
glimpse()
salario_compa <- mean_sect_ej3 %>%
select(letra_desc, year, promediosector) %>%
group_by(year) %>%
left_join(salario_x_year, by = "year") %>%
mutate(proporcion = promediosector / promedio_nacional) %>%
glimpse()
View(salario_compa)
salario_compa <- mean_sect_ej3 %>%
select(letra_desc, year, promediosector) %>%
group_by(year) %>%
left_join(salario_x_year, by = "year") %>%
mutate(proporcion = round(promediosector / promedio_nacional,1) %>%
glimpse()
View(salario_compa)
View(salario_compa)
salario_compa <- mean_sect_ej3 %>%
select(letra_desc, year, promediosector) %>%
group_by(year) %>%
left_join(salario_x_year, by = "year") %>%
mutate(proporcion = round(promediosector / promedio_nacional,1)) %>%
glimpse()
View(salario_x_year)
final_compa <- salario_compa %>%
select(letra_desc, year, proporcion) %>%
group_by(year) %>%
left_join(salario_x_year, by = "year") %>%
final_compa <- salario_compa %>%
select(letra_desc, year, proporcion) %>%
glimpse()
salario_compa <- mean_sect_ej3 %>%
select(letra_desc, year, promediosector) %>%
group_by(year) %>%
left_join(salario_x_year, by = "year") %>%
mutate(proporcion = round(promediosector / promedio_nacional,1)) %>%
glimpse()
final_compa <- salario_compa %>%
select(letra_desc, year, proporcion) %>%
glimpse()
salario_nacional <- salario_x_year %>%
mutate(letra_desc = "nacional") %>%
rename(proporcion = promedio_nacional) %>%
mutate(proporcion = 1)
salario_nacional <- salario_x_year %>%
mutate(letra_desc = "nacional") %>%
rename(proporcion = promedio_nacional) %>%
mutate(proporcion = 1) %>%
glimpse()
final_compa <- bind_rows(final_compa, salario_nacional)
View(final_compa)
evoluc_salarios<- final_compa %>%
filter(letra_desc == "Serv. De Alojamiento Y Serv. De Comida" |
letra_desc == "Serv. De Asoc. Y Serv. Personales"|
letra_desc == "Información Y Comunicaciones"|
letra_desc =="Explotacion De Minas Y Canteras"|
letra_desc == "nacional") %>%
glimpse()
View(evoluc_salarios)
graf_comp <- ggplot(evoluc_salarios) +
geom_col(aes(x = proporcion, y = letra_desc, fill = letra_desc)) +
geom_text(aes(x = proporcion, y = letra_desc, label = proporcion), hjust = -0.2, size = 5) +
scale_fill_manual(values = c(
"nacional" = "#1F77B4",
"Información Y Comunicaciones" = "#FF7F0E",
"Serv. De Alojamiento Y Serv. De Comida" = "#2CA02C",
"Serv. De Asoc. Y Serv. Personales" = "#D62728",
"Explotacion De Minas Y Canteras" = "#9467BD"
)) +
theme_minimal() +
labs(
title = "Evolución salarial de los Sectores de Actividad elegidos,
respecto al salario promedio nacional para 2014",
subtitle = "Año: {frame_time}",
fill = "Sector de actividad",
x = "Salario promedio en pesos",
y = "Sector de actividad"
) +
scale_x_continuous(labels = scales::number_format(accuracy = 1)) +
theme(
plot.title = element_text(size = 15, face = "bold", family = "sans"),
plot.subtitle = element_text(size = 12, family = "sans"),
legend.title = element_text(size = 10,face = "bold", family = "sans"),
legend.text = element_text(size = 8, family = "sans"),
axis.title.x = element_text(size = 11, family = "sans", margin = margin(t = 10),hjust = 0.5),
axis.text.y = element_blank(),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = c(0, 0),
legend.box.margin = margin(t = 20),
plot.margin = margin(t = 30, r = 20, b = 10, l = 20),
)
anim <- graf_comp +
transition_time(year) +
ease_aes('linear')
anim_save("graf_comp.gif")
library(tidyverse)
library(ggplot2)
library(gganimate)
library(gifski)
graf_comp <- ggplot(evoluc_salarios) +
geom_col(aes(x = proporcion, y = letra_desc, fill = letra_desc)) +
geom_text(aes(x = proporcion, y = letra_desc, label = proporcion), hjust = -0.2, size = 5) +
scale_fill_manual(values = c(
"nacional" = "#1F77B4",
"Información Y Comunicaciones" = "#FF7F0E",
"Serv. De Alojamiento Y Serv. De Comida" = "#2CA02C",
"Serv. De Asoc. Y Serv. Personales" = "#D62728",
"Explotacion De Minas Y Canteras" = "#9467BD"
)) +
theme_minimal() +
labs(
title = "Evolución salarial de los Sectores de Actividad elegidos,
respecto al salario promedio nacional para 2014",
subtitle = "Año: {frame_time}",
fill = "Sector de actividad",
x = "Salario promedio en pesos",
y = "Sector de actividad"
) +
scale_x_continuous(labels = scales::number_format(accuracy = 1)) +
theme(
plot.title = element_text(size = 15, face = "bold", family = "sans"),
plot.subtitle = element_text(size = 12, family = "sans"),
legend.title = element_text(size = 10,face = "bold", family = "sans"),
legend.text = element_text(size = 8, family = "sans"),
axis.title.x = element_text(size = 11, family = "sans", margin = margin(t = 10),hjust = 0.5),
axis.text.y = element_blank(),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = c(0, 0),
legend.box.margin = margin(t = 20),
plot.margin = margin(t = 30, r = 20, b = 10, l = 20),
)
anim <- graf_comp +
transition_time(year) +
ease_aes('linear')
animation <- gganimate::animate(anim, width = 800, height = 600, dpi = 300, renderer = gifski_renderer())
gganimate::anim_save("graf_comp.gif", animation = animation)
salario_compa <- mean_sect_ej3 %>%
select(letra_desc, year, promediosector) %>%
group_by(year) %>%
left_join(salario_x_year, by = "year") %>%
mutate(proporcion = round(promediosector / promedio_nacional,2)) %>%
glimpse()
final_compa <- salario_compa %>%
select(letra_desc, year, proporcion) %>%
glimpse()
salario_nacional <- salario_x_year %>%
mutate(letra_desc = "nacional") %>%
rename(proporcion = promedio_nacional) %>%
mutate(proporcion = 1) %>%
glimpse()
final_compa <- bind_rows(final_compa, salario_nacional)
evoluc_salarios<- final_compa %>%
filter(letra_desc == "Serv. De Alojamiento Y Serv. De Comida" |
letra_desc == "Serv. De Asoc. Y Serv. Personales"|
letra_desc == "Información Y Comunicaciones"|
letra_desc =="Explotacion De Minas Y Canteras"|
letra_desc == "nacional") %>%
glimpse()
graf_comp <- ggplot(evoluc_salarios) +
geom_col(aes(x = proporcion, y = letra_desc, fill = letra_desc)) +
geom_text(aes(x = proporcion, y = letra_desc, label = proporcion), hjust = -0.2, size = 5) +
scale_fill_manual(values = c(
"nacional" = "#1F77B4",
"Información Y Comunicaciones" = "#FF7F0E",
"Serv. De Alojamiento Y Serv. De Comida" = "#2CA02C",
"Serv. De Asoc. Y Serv. Personales" = "#D62728",
"Explotacion De Minas Y Canteras" = "#9467BD"
)) +
theme_minimal() +
labs(
title = "Evolución salarial de los Sectores de Actividad elegidos,
respecto al salario promedio nacional",
subtitle = "Año: {frame_time}",
fill = "Sector de actividad",
x = "Salario promedio en pesos",
y = "Sector de actividad"
) +
scale_x_continuous(labels = scales::number_format(accuracy = 1)) +
theme(
plot.title = element_text(size = 15, face = "bold", family = "sans"),
plot.subtitle = element_text(size = 12, family = "sans"),
legend.title = element_text(size = 10,face = "bold", family = "sans"),
legend.text = element_text(size = 8, family = "sans"),
axis.title.x = element_text(size = 11, family = "sans", margin = margin(t = 10),hjust = 0.5),
axis.text.y = element_blank(),
legend.position = "bottom",
legend.direction = "vertical",
legend.box = "vertical",
legend.justification = c(0, 0),
legend.box.margin = margin(t = 20),
plot.margin = margin(t = 30, r = 20, b = 10, l = 20),
)
anim <- graf_comp +
transition_time(year) +
ease_aes('linear')
animation <- gganimate::animate(anim, width = 800, height = 600, dpi = 300, renderer = gifski_renderer())
gganimate::anim_save("graf_comp.gif", animation = animation)
![Animation](BASES-Y-VIZ/VIZ/graf_comp.gif)
mean_sect_ano <- read.csv("BASES-Y-VIZ/PRESENTACION_FINAL/mean_sect_ano.csv", header = TRUE)
mean_sect_ej3<- mean_sect_ano %>%
rename(promediosector= mean_sector) %>%
glimpse()
View(salario_x_year)
salario_x_year <- mean_sect_ej3 %>%
select(letra_desc, year, promediosector) %>%
group_by(year) %>%
summarize(promedio_nacional = mean(promediosector, na.rm = TRUE)) %>%
glimpse()
sal_year_brecha<- salario_x_year %>%
select(year, promedio_nacional) %>%
rename(promedio_nacional= promediosector)
sal_year_brecha<- salario_x_year %>%
select(year, promedio_nacional) %>%
brecha_salarial_porcentaje <- mean_sect_ej3 %>%
left_join(sal_year_brecha) %>%
group_by(year) %>%
summarize(
Salario_Maximo = max(promediosector, na.rm = TRUE),
Salario_Minimo = min(promediosector, na.rm = TRUE),
Brecha_Salarial = Salario_Maximo - Salario_Minimo,
Brecha_Sal_porc = round((Salario_Maximo / Salario_Minimo) * 100, 2)) %>%
glimpse()
sal_year_brecha<- salario_x_year %>%
select(year, promedio_nacional)
brecha_salarial_porcentaje <- mean_sect_ej3 %>%
left_join(sal_year_brecha) %>%
group_by(year) %>%
summarize(
Salario_Maximo = max(promediosector, na.rm = TRUE),
Salario_Minimo = min(promediosector, na.rm = TRUE),
Brecha_Salarial = Salario_Maximo - Salario_Minimo,
Brecha_Sal_porc = round((Salario_Maximo / Salario_Minimo) * 100, 2)) %>%
glimpse()
install.packages("paletteer")
